user nobody;
worker_processes 1;
error_log logs/error.log notice;
pid       logs/nginx.pid;

events{
worker_connections 5024;
}

http{
include mime.types;
default_type applocation/octet-stream;
log_format main '$remote_addr - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "$http_x_forwarded_for"';
sendfile on;
tcp_nopush on;
server_tokens off;
keepalive_timeout 65;
keepalive_requests 100;
#启动网页压缩功能
gzip on;
#容量小于1000b的内容不压缩
gzip_min_length 1000;
#压缩缓存的个数与容量
gzip_buffers 16 32k;
#制定压缩文件类型
gzip_types text/plain applocation/xml;
#压缩级别，可以是1至9之间的数字，数字越大，压缩效果越好，速度也越慢
gzip_comp_level 2;
#设置客户端请求的缓存大小
client_body_buffer_size 128k;
#设置客户端请求所允许的最大文件容量
client_max_body_size 100m;
#客户端请求的header缓存大小
large_client_header_buffers 4 8k;
#启动代理缓存功能
proxy_buffering on;
#从被代理服务器（真实服务器）所获取的第一部分响应数据的缓存大小
proxy_buffer_size 8k;
#从被代理服务器读取响应数据的缓存个数与容量
proxy_buffers 8 128k;
#设置缓存目录及其他缓存参数，缓存路径为/usr/local/nginx/cache,levels用来设置子目录个数，
#keys_zone定义缓冲名称及容量（名称为one，容量为100MB），inactive定义缓存的存活时间为1天
#max_size设置硬盘缓存容量为2GB，这里定义的缓存为one，将在下面使用proxy_cache指令调用该缓存
proxy_cache_path /usr/local/nginx/cache levels=1:2 keys_zone=one:100m inactive=1d max_size=2G;
#与后端服务器建立TCP握手的超时时间
proxy_connect_timeout 60s;
#设置后端服务器组，名称为servers
upstream servers{
#ip_hash 使用IP哈希值确保相同IP的客户端使用相同的后端服务器，不适用该参数调度器将采用轮询的方式进行数据转发
#ip_hash;
#max_fails  设置链接后端服务器3次失败则认为服务器处于无效状态，
#fail_timeout设置链接后端服务器超时时间为30s，weight设置权重为2
server 192.168.1.191:80 max_fails=3 fail_timeout=30s weight=2;
server 192.168.1.192:80 max_fails=3 fail_timeout=30s weight=2;
server 192.168.1.193:80 max_fails=3 fail_timeout=30s weight=2;
}
server{
	listen 80;
	server_name www.example.com;
	access_log logs/host.access.log main;
	location /{
		proxy_pass http://servers;
		proxy_cache one;
		proxy_set_header X-Forwarded-For $remote_addr;
	}
}
}
