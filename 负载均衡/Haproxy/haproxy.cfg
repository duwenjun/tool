#全局设置
global
maxconn 4096
log 127.0.0.1 local3 info
chroot /var/haproxy
uid 503
gid 503
daemon
nbproc 1
pidfile /var/run/haproxy.pid
ulimit-n 65535
stats socket /var/tmp/stats

defaults
log global
mode http
maxconn 20489
option httplog
option httpclose
option dontlognull
option forwardfor
option redispatch
option abortonclose
stats refresh 30
retries 3
balance roundrobin
cookie SRV
timeout check 2000ms
timeout connect 5000ms
timeout server 50000ms
timeout client 50000ms

frontend web_serivce   #定义终端用户访问的前端服务器
bind 0.0.0.0:80
mode http
log global
option httplog
option httpclose
option forwardfor

acl inside_src src 192.168.0.0/24   #定义ACL
#use_backend调用ACL定义，如果源地址为192.168.0.0/24，则代理服务器将会把请求转发给inside_servers服务器组
use_backend inside_servers if inside_src

default_backend external_servers
backend external_servers
mode http
balance roundrobin   #轮询真实服务器
#检查服务器的index.html文件，以此判断服务器的健康状态
option httpchk GET /index.html
#定义后端真实服务器，想cookie信息中插入web1信息，check允许对服务器进行健康检查
#监控检查的时间间隔为2000ms，连续两次健康检查成功则认为服务器是有效开启的，连续
#三次健康检查失败后，认为服务器已经宕机，服务器权重为1
server web1 192.168.1.192:80 cookie web1 check inter 2000 rise 2 fall 3 weight 1
server web2 192.168.1.193:80 cookie web2 check inter 2000 rise 2 fall 3 weight 1

backend inside_servers
mode http
balance roundrobin
option httpchk GET/index.html
server web1 192.168.1.192:80 cookie web1 check inter 1500 rise 3 fall 3 weight 1